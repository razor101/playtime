@using PlayTime.Infrastructure.Models
@model PlayTime.Web.Models.Project.ProjectViewModel

<h1>@Model.Data.Customer.Name - @Model.Data.Name</h1>

<div>
    @Html.LabelFor(x => x.Data.Price):
    @Model.Data.Price
</div>

<div>
    @Html.LabelFor(x => x.Data.IsFixed):
    @Model.Data.IsFixed
</div>

@if (Model.Data.AssignedUsers.Any())
{
    <br />
    
    <h2>Assigned users</h2>
    <ul>
        @foreach (var user in Model.Data.AssignedUsers)
        {
            <li>
                @user.DisplayName
            </li>
        }
    </ul>
}

<br />
<div>
    @Html.ActionLink("Assign users...", "AssignUsers", "Project", new { @id = Model.Data.Id }, null)
</div>

<h2>
    @Html.ProjectTasks(Model.Data.Id)
</h2>

@if (Model.Data.Tasks.Any())
{
    <ul>
        @foreach (Task task in Model.Data.Tasks)
        {
        <li>
            @Html.TaskView(Model.Data.Id, task)
        </li>
        }
    </ul>
}
else
{
    <p>No tasks yet...</p>
}

<br/>
<br/>

<h2>Create task</h2>

@using (Html.BeginForm("Create", "Task", FormMethod.Post))
{
    <div>
        @Html.Label("Name")
        @Html.Editor("Name")
    </div>

    <div>
        @Html.Label("UserId")
        @Html.DropDownListFor(x => x.UserId, Model.Users, "-- select user --")
    </div>
    
    @Html.Hidden("ProjectId", Model.Data.Id)

    <div>
        <input type="submit" value="Create" />
    </div>
}